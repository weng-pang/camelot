<?php
namespace App\Shell;

use App\Model\Entity\ArticleView;
use Cake\Console\Shell;
use Cake\Datasource\ConnectionManager;
use Cake\Filesystem\File;
use Cake\I18n\FrozenTime;
use Cake\ORM\TableRegistry;
use Symfony\Component\Process\Process;

/**
 * DumpArticles shell command.
 */
class DumpArticlesShell extends Shell
{

    /**
     * Manage the available sub-commands along with their arguments and help
     *
     * @see http://book.cakephp.org/3.0/en/console-and-shells.html#configuring-options-and-generating-help
     *
     * @return \Cake\Console\ConsoleOptionParser
     */
    public function getOptionParser()
    {
        $parser = parent::getOptionParser();

        return $parser;
    }

    /**
     * main() method.
     *
     * @return bool|int|null Success or error code.
     */
    public function main()
    {
        $connection = ConnectionManager::get('default');
        $config = $connection->config();
        $db = $config['database'];
        $scriptFile = new File(CONFIG . "/schema/articles.sql");

        $process = new Process([
            'mysqldump',
            "--user={$config['username']}",
            "--password={$config['password']}",
            "--host={$config['host']}",
            '--no-create-info',
            $db,
            'articles',
            'tags',
            'articles_tags',
            'article_views'
        ]);

        $process->run();
        $dumpedData = $process->getOutput();
        if ($process->getExitCode() !== 0) {
            $this->err("Error dumping articles, tags, and articles_tags tables");
            $error = $process->getErrorOutput();
            if ($error) {
                $this->err($error);
            }
            return false;
        } else if (!trim($dumpedData)) {
            $this->err("mysqldump completed, but returned no data");
            return false;
        }

        $this->addFakeArticleViews();
        $newArticlesScript = <<<SQL
-- ===============================================================================
--   This file is automatically generated by the "bin/cake dump_articles" shell.
-- ===============================================================================

-- ----------------------------------------------------------------------
--   Clear existing data in preparation for importing fresh data below.
-- ----------------------------------------------------------------------

DELETE FROM articles_tags WHERE 1;
DELETE FROM article_views WHERE 1;
DELETE FROM articles WHERE 1;
DELETE FROM tags WHERE 1;


-- -----------------------------------------------------------------------------------------
-- Output from "mysqldump --no-create-info articles tags articles_tags articles_views"
-- -----------------------------------------------------------------------------------------

$dumpedData
SQL;

        $this->out($newArticlesScript);
        $scriptFile->write($newArticlesScript);
        $this->success("Wrote " . strlen($newArticlesScript) . " bytes of output to " . $scriptFile->path);
        $this->out('Done!');
        return true;
    }

    private function addFakeArticleViews() {
        $articleViewsTable = TableRegistry::get('ArticleViews');
        $articlesTable = TableRegistry::get('Articles');

        $articleViewsTable->deleteAll(['1' => '1']);

        $allArticleViews = [];
        foreach($articlesTable->find() as $article) {
            $views = rand(0, 100);
            for ($i = 0; $i < $views; $i ++) {
                $articleView = $articleViewsTable->newEntity();
                $articleView->article = $article;
                $articleView->user_id = 1;

                $daysInPast = rand(0, 30);
                $articleView->created = new FrozenTime("now - {$daysInPast} days");
                $allArticleViews[] = $articleView;
            }
        }

        $articleViewsTable->saveMany($allArticleViews);
    }
}
