-- ===============================================================================
--   This file is automatically generated by the "bin/cake dump_articles" shell.
-- ===============================================================================

-- ----------------------------------------------------------------------
--   Clear existing data in preparation for importing fresh data below.
-- ----------------------------------------------------------------------

DELETE FROM articles_tags WHERE 1;
DELETE FROM article_views WHERE 1;
DELETE FROM articles WHERE 1;
DELETE FROM tags WHERE 1;


-- -----------------------------------------------------------------------------------------
-- Output from "mysqldump --no-create-info articles tags articles_tags articles_views"
-- -----------------------------------------------------------------------------------------

-- MySQL dump 10.16  Distrib 10.1.30-MariaDB, for debian-linux-gnu (x86_64)
--
-- Host: localhost    Database: cms
-- ------------------------------------------------------
-- Server version	10.1.30-MariaDB-0ubuntu0.17.10.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Dumping data for table `articles`
--

LOCK TABLES `articles` WRITE;
/*!40000 ALTER TABLE `articles` DISABLE KEYS */;
INSERT INTO `articles` VALUES (1,1,'Using Camelot to help with Monash IE','welcome','\n<p>Camelot is a custom CMS written using <a href=\"https://cakephp.org\">CakePHP</a>. The idea is to show how various different functionality can be implemented in a modern PHP website using the CakePHP framework. Initially, it is a basic blog site, but over time it will grow as more features are added. The source code can be viewed at <a href=\"https://git.infotech.monash.edu/UGIE/cms\">https://git.infotech.monash.edu/UGIE/cms</a>.</p>\n<p>The intention is that students are able to look at the source code if they are curious abou thow to perform certain tasks. This can then be used as a learning tool to help students implement their own systems.</p>\n<p>If there is any code that doesn\'t make sense, don\'t copy it blindly. Instead, email <a href=\"mailto:peter.serwylo@monash.edu\">peter.serwylo@monash.edu</a> and ask if he can add further clarifying comments to the code base, or perhaps another article in Camelot to further explain the concept.</p>\n',1,'2018-05-15 05:46:08','2018-05-22 21:13:13',0),(2,1,'Learning by viewing the source code of Camelot','viewing-source','\n<p>As this website is built to illustrate certain coding practices, it is important to be able to look at the source code. This includes not only the PHP code (Controllers, Models, etc), but also the view code (Views, Layouts). On any page, you should be able to view links to the relevant Controller, Action, View, and Template for that page. This is true both for the public website, and also the administrator dashaboard. In addition to this, the entire source code is available at <a href=\"https://git.infotech.monash.edu/UGIE/cms\">https://git.infotech.monash.edu/UGIE/cms</a>.</p>\n',1,'2018-05-15 05:46:08','2018-05-22 21:13:55',0),(3,1,'Logging in and viewing the Admin Dashboard','admin-dashboard','\n<p>Anyone can log into the administrator dashboard for this website. This site is currently configured to be in \"demo mode\", a mode I invented which allows anyone to log in and play around with the administrator dashboard. To do this, click the \"Login\" button in the top right of any page. As it is in demo mode, it is already prefilled with a username + password that you can use to log in. Any content you add will periodically get deleted as the website database is cleared and reinstalled.</p>\n',1,'2018-05-15 05:46:08','2018-05-22 21:13:40',0),(4,1,'Many-to-many relashionships in CakePHP','many-to-many','\n<p>ONe of the common patterns seen in many websites is a many-to-many join between two entities. Classic examples include:</p>\n<ul><li>\"Categories have many products, but a product can have many categories\", and</li>\n<li>\"An order has many items, but an item can appear on many different orders\".</li>\n</ul><p>The most obvious way this type of relationship is realised in Camelot is through an <code>Articles &lt;-&gt; Tags</code> relationship. This involves several aspects, described below.</p>\n<h2>Database Model</h2>\n<p>The database model for a many-to-many relationship requires a join table. That is, a table which typically doesn\'t contain much information beyond two foreign keys, one to each of the entities which need to be joined. The join table for this <code>Articles &lt;-&gt; Tags</code> relationship is the most basic:</p>\n<pre style=\"padding-left:30px;\">CREATE TABLE articles_tags (<br />    article_id INT NOT NULL,<br />    tag_id INT NOT NULL,<br />    PRIMARY KEY (article_id, tag_id),<br />    FOREIGN KEY tag_key(tag_id) REFERENCES tags(id),<br />    FOREIGN KEY article_key(article_id) REFERENCES articles(id)<br />);</pre>\n<p>Other times, a join table may require more attributes. Think of the \"Order has many items, item belongs to many orders\" relationship. With that it is common to have a <code>orders_items</code> table which includes not just the two foreign keys, but also things such as \"Quantity\".</p>\n<h2>CakePHP Models</h2>\n<p>Once the <code>articles</code>, <code>tags</code>, and <code>articles_tags</code> tables have been created, we need to ensure that CakePHP is aware of this association. Note that CakePHP does not require a separate Entity + Table class for the <code>articles_tags</code> table. You could have one if you need it (e.g. in the <code>orders_items</code> example above), but this for tagging articles, there is no extra information saved with this association. However, you <a href=\"https://book.cakephp.org/3.0/en/orm/associations.html#belongstomany-associations\">do need to tell the <code>ArticlesTable</code> that it <code>belongsToMany</code> <code>Tags</code></a>, and vice-verca:</p>\n<pre style=\"background-color:#ffffff;color:#000000;font-family:\'DejaVu Sans Mono\';font-size:10.5pt;padding-left:30px;\">class ArticlesTable extends Table {<br />    ...<br />    public function initialize(array $config)<br />    {<br />        parent::initialize($config);<br />        ...<br />        $this-&gt;belongsToMany(\'Tags\');<br />        ...<br />    }<br />    ...<br />}<span style=\"background-color:#f7faff;\"><br /></span></pre>\n<h2>Database Queries</h2>\n<p>Now that the table exists, and the association is correctly setup in our model layer, there are a few more considerations with regards to the data model and how CakePHP interacts with it. Firstly, when loading a list of articles from the database, it acn be helpful to also include information about the tags, so that you can, e.g. loop over <code>$article-&gt;tags</code> and display them to the user. In the case of Camelot, we display a list of associated articles when viewing a tag in the admin dashboard, and so we want to loop over <code>$tag-&gt;articles</code> in the view.</p>\n<p>To do this, <a href=\"https://book.cakephp.org/3.0/en/orm/retrieving-data-and-resultsets.html#eager-loading-associations\">use <code>contains</code> when loading data</a>:</p>\n<pre style=\"padding-left:30px;\">$tag = $this-&gt;Tags-&gt;get($id, [<br />    \'contain\' =&gt; [\'Articles\']<br />]);</pre>\n<h2>Basic User Interface</h2>\n<p>If you use <code>./bin/cake bake</code> to produce a form for articles, you will notice that it includes two interesting parts with regard to the selection of tags.</p>\n<p>Firstly, the controller queries the database to get a list of available tags, and then passes it to the view. This is important, because how else does the view know what tags to offer the user when they edit an article?</p>\n<pre style=\"padding-left:30px;\">$tags = $this-&gt;Articles-&gt;Tags-&gt;find(\'list\');<br />$this-&gt;set(\'tags\', $tags);</pre>\n<p>Secondly, the view adds a multi-select control to the form. This is described further in the CakePHP documentation for \"<a href=\"https://book.cakephp.org/3.0/en/views/helpers/form.html#creating-inputs-for-associated-data\">Creating Inputs for Associated Data</a>\".</p>\n<h2>Improved User Interface</h2>\n<p>The administration user interface needs to allow users to choose many tags when editing an article. The typical way this is done via HTML is with a <code>&lt;select&gt;</code> widget that allows fro muptiple selection. This is what <a href=\"https://book.cakephp.org/3.0/en/views/helpers/form.html#creating-inputs-for-associated-data\">CakePHP outputs by default</a>. However, this UX is particularly terrible for users, because they need to somehow know that you should hold down the Control key while clicking items to select additional items.</p>\n<p>Camelot indeed does use the default CakePHP multiselect, but then it makes it much more usable and interactive by utilising the <a href=\"https://harvesthq.github.io/chosen/\">Chosen</a> JavaScript library.</p>\n<p>The source code for the template doesn\'t do anything special when outputting the multi-select widget:</p>\n<pre style=\"padding-left:30px;\">echo $this-&gt;Form-&gt;control(\'tags._ids\', [\'options\' =&gt; $tags]);</pre>\n<p>Instead, the magic happens at the end of the admin.ctp template, where it does the following:</p>\n<pre style=\"padding-left:30px;\">&lt;?php echo $this-&gt;Html-&gt;script(\'lib/chosen.jquery.min.js\'); ?&gt;<br />&lt;script&gt;<br />(function() {<br />Â    $(\'select\').chosen({width: \'50%\'});<br />})();<br />&lt;/script&gt;</pre>\n<p>The first line asks the browser to load the required JavaScript file, while the function in the <code>&lt;script&gt;</code> tag says \"Find all \'select\' boxes in the page, and ask the Chosen library to make them pretty\".</p>\n',1,'2018-05-15 05:46:08','2018-05-22 21:12:34',0),(5,1,'Writting a view template without any HTML, JS, or CSS','template-no-html','\n<h2>The template with no HTML</h2>\n<p>Generally when thinking of a view or a layout in CakePHP, my first though is of HTML, JavaScript, CSS. However, this is not always the case. Indeed, if you can get away without writing any HTML in a view, then I\'d consider that a job well done (even though it can be more difficult to understand). Lets take an example from Camelot, the <a href=\"http://ie.infotech.monash.edu/camelot/users/view/1\">users view</a> (<a href=\"https://git.infotech.monash.edu/UGIE/cms/blob/master/src/Template/Users/view.ctp\">source</a>). The view in its entirety is as follows (at time of writing this article):</p>\n<pre>&lt;?php<br />/**<br />Â * @var \\App\\View\\AppView $this<br />Â * @var \\App\\Model\\Entity\\User $user<br />Â */<br /><br />$this-&gt;assign(\'heading-class\', \'post-heading\');<br />$this-&gt;assign(\'heading\', $user-&gt;email);<br />$this-&gt;assign(\'meta\', \"Articles by {$user-&gt;email}\");<br /><br />foreach($user-&gt;articles as $article) {<br />Â Â Â  echo $this-&gt;element(\'article-snippet\', [\'article\' =&gt; $article]);<br />}</pre>\n<p>So, why is this so small, and why does it not have any HTML in it? The page itself has two main parts:</p>\n<ul><li>A header (including meu buttons, background picture, and a title).</li>\n<li>A list of articles (each article has a title, a snippet - i.e. the first few characters of its body, and its created date).</li>\n</ul><h2>The header</h2>\n<p>Generally, a header would include some form of navigation, perhaps a logo, and a title. Most of this doesn\'t change from one page to another. The menu stays the same, and the logo would certainly stay the same. This makes things relatively straightforward, because the default layout (<a href=\"https://git.infotech.monash.edu/UGIE/cms/blob/master/src/Template/Layout/default.ctp\">source</a>, <a href=\"https://book.cakephp.org/3.0/en/views.html#layouts\">docs</a>) will include the relevant HTML for each part of the header.</p>\n<p>However, the title of a page does change each page that you view. So how do we achieve this with a framework such as CakePHP? The answer is to use <code>$this-&gt;fetch()</code> in the layout, and <code>$this-&gt;assign()</code> in the view.</p>\n<h3>Header in the layout</h3>\n<p>The following is the header-related code from the <a href=\"https://git.infotech.monash.edu/UGIE/cms/blob/master/src/Template/Layout/default.ctp\">default.ctp</a> layout:</p>\n<pre>&lt;!-- Page Header --&gt;<br />&lt;header class=\"masthead\" style=\"background-image: url(\'&lt;?= \\Cake\\Routing\\Router::url(\'/img/home-bg.jpg\', true) ?&gt;\')\"&gt;<br />Â Â Â  &lt;div class=\"overlay\"&gt;&lt;/div&gt;<br />Â Â Â  &lt;div class=\"container\"&gt;<br />Â Â Â Â Â Â Â  &lt;div class=\"row\"&gt;<br />Â Â Â Â Â Â Â Â Â Â Â  &lt;div class=\"col-lg-8 col-md-10 mx-auto\"&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;div class=\"&lt;?= <strong>$this-&gt;fetch(\'heading-class\', \'page-heading\')</strong> ?&gt;\"&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;h1&gt;&lt;?= <strong>$this-&gt;fetch(\'heading\')</strong> ?&gt;&lt;/h1&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;?php if ($this-&gt;fetch(\'subheading\')): ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;h2 class=\"subheading\"&gt;&lt;?= <strong>$this-&gt;fetch(\'subheading\')</strong> ?&gt;&lt;/h2&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;?php endif ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;?php if ($this-&gt;fetch(\'meta\')): ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;span class=\"meta\"&gt;&lt;?= <strong>$this-&gt;fetch(\'meta\')</strong> ?&gt;&lt;/span&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;?php endif ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;/div&gt;<br />Â Â Â Â Â Â Â Â Â Â Â  &lt;/div&gt;<br />Â Â Â Â Â Â Â  &lt;/div&gt;<br />Â Â Â  &lt;/div&gt;<br />&lt;/header&gt;</pre>\n<p>Notice how there are some if statements which check for the presence of a subheading or meta block before deciding whether to add the relevant HTML. This is to prevent the output containing <code>&lt;h2 class=\"subheading\"&gt;&lt;/h2&gt;</code> if there was not any subheading specified by the view.</p>\n<h3>Header in the view</h3>\n<p>In order to populate these \"blocks\", the child view makes use of the <code>assign()</code> method:</p>\n<pre>$this-&gt;assign(\'heading-class\', \'post-heading\');<br />$this-&gt;assign(\'heading\', $user-&gt;email);<br />$this-&gt;assign(\'meta\', \"Articles by {$user-&gt;email}\");</pre>\n<p>Notice how the first parameter to the method corresponds directly to the fetch() blocks in the layout? Also notice how we don\'t need to pass any HTML into the template from our view, and as such our view only needs to worry about the content (e.g. <code>\"Articles by {$user-&gt;email}\"</code>).</p>\n<h2>The article list</h2>\n<p>The final part of our template without any HTML is the articles list, which looks like so:</p>\n<pre>foreach($user-&gt;articles as $article) {<br />Â Â Â  echo $this-&gt;element(\'article-snippet\', [\'article\' =&gt; $article]);<br />}</pre>\n<p>This makes use of a great feature of CakePHP: <a href=\"https://book.cakephp.org/3.0/en/views.html#elements\">Elements</a>. In the code above, the <code>article-snippet</code> element is rendered by calling <code>$this-&gt;element()</code>, and passing in an array of parameters to the element. In our case, our element only requires one element, an <code>\'article\'</code>.</p>\n<h3>The <code>article-snippet</code> element</h3>\n<p>When calling<code> $this-&gt;element(\'element-name\')</code>, the CakePHP templating system will look for a file in <code>src/Templates/Element/element-name.ctp</code>. So as expected, we have an <a href=\"https://git.infotech.monash.edu/UGIE/cms/blob/master/src/Template/Element/article-snippet.ctp\"><code>article-snippet.ctp</code></a> file there, which is as follows:</p>\n<pre>&lt;?php<br />/**<br />Â * @var \\App\\Model\\Entity\\Article $article<br />Â */<br />?&gt;<br /><br />&lt;div class=\"post-preview\"&gt;<br />Â Â Â  &lt;a href=\"&lt;?= $this-&gt;Url-&gt;build([\'controller\' =&gt; \'articles\', \'action\' =&gt; \'view\', $article-&gt;slug]) ?&gt;\"&gt;<br />Â Â Â Â Â Â Â  &lt;h2 class=\"post-title\"&gt;<br />Â Â Â Â Â Â Â Â Â Â Â  &lt;?= h($article-&gt;title) ?&gt;<br />Â Â Â Â Â Â Â  &lt;/h2&gt;<br />Â Â Â Â Â Â Â  &lt;?php if ($article-&gt;subtitle): ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â  &lt;h3 class=\"post-subtitle\"&gt;<br />Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  &lt;?= h($article-&gt;subtitle) ?&gt;<br />Â Â Â Â Â Â Â Â Â Â Â  &lt;/h3&gt;<br />Â Â Â Â Â Â Â  &lt;?php endif ?&gt;<br />Â Â Â  &lt;/a&gt;<br />Â Â Â  &lt;p&gt;<br />Â Â Â Â Â Â Â  &lt;?= $this-&gt;Text-&gt;truncate($article[\'body\'], 250, [\'exact\' =&gt; false]) ?&gt;<br />Â Â Â  &lt;/p&gt;<br />Â Â Â  &lt;p class=\"post-meta\"&gt;Posted on &lt;?= h($article-&gt;created-&gt;toFormattedDateString()) ?&gt;&lt;/p&gt;<br />&lt;/div&gt;<br />&lt;hr&gt;</pre>\n<p>The actual content of this is no different to a regular .ctp file that you might use for a view or a layout. The benefit of putting it in an element though, is that we can reuse the exact same HTML in several places, without having to copy and paste it. If we make a change to our element, it will automatically be reflected in several different parts of the website, keeping the website consistent and making it easier to maintain. The article-snippet element is used in several places throughout the system:</p>\n<ul><li><a href=\"http://ie.infotech.monash.edu/camelot/\">The home page</a></li>\n<li><a href=\"http://ie.infotech.monash.edu/camelot/users/view/1\">The users profile</a></li>\n<li><a href=\"http://ie.infotech.monash.edu/camelot/tags/view/2\">The list of tags</a></li>\n</ul><p>Note that this idea is not unique to CakePHP. Most modern frameworks share similar ideas, only with different names. For example, Laravel refers to these as \"<a href=\"https://laravel.com/docs/5.6/blade#components-and-slots\">components</a>\".</p>\n',1,'2018-05-15 05:46:08','2018-05-22 21:15:25',0),(6,1,'Uploading images','image-upload','\n<p>It is quite common for a website to allow images to be uploaded. In Camelot, we will start by adding a feature to the <a href=\"http://ie.infotech.monash.edu/camelot/admin/settings\">settings page in the admin dashboard</a>, which allows the main background image on the home page to be customized.</p>\n<h2>Video</h2>\n<p>This time I\'ve tried something different. Instead of just explaining how it works via a blog post, I\'ve tried my best to record the procses of me adding this feature, so that if you prefer, you can watch that and see how I did it. I\'ve intentionally left the videos un-edited, so that you can see that I don\'t know everything, and I do spend a lot of time problem solving just like everyone else. It is my hope that (if you ever get the time to watch these videos, then) you will get a bit more insight into the process. I\'ll also try to write up a blog post too, but just be warned - the contents of the blog post presume that everything works perfectly and there is no issues at all! However, as you will see in the videos I actually spent at least half the time trying to figure out why my images were not being saved to the database!<iframe src=\"//www.youtube.com/embed/rbYUOY7dNaA\" width=\"560\" height=\"315\" frameborder=\"0\"></iframe>Â  <iframe src=\"//www.youtube.com/embed/u8nAZ5NuBLE?rel=0\" width=\"560\" height=\"315\" frameborder=\"0\"></iframe></p>\n<h2>Details</h2>\n<p>To be added soon.</p>\n',1,'2018-05-15 05:46:08','2018-05-24 06:23:09',0),(7, 1, 'Camelot, the place to be!', 'Camelot-the-place-to-be', '\r\n<p>Camelot is a castle and court associated with the legendary King Arthur. Absent in the early Arthurian material, Camelot first appeared in 12th-century French romances and, after the Lancelot-Grail cycle, eventually came to be described as the fantastic capital of Arthur\'s realm and a symbol of the Arthurian world.</p>\r\n<p>The stories locate it somewhere in Great Britain and sometimes associate it with real cities, though more usually its precise location is not revealed. Most scholars regard it as being entirely fictional, its geography being perfect for chivalric romance writers. Nevertheless, arguments about the location of the "real Camelot" have occurred since the 15th century and continue to rage today in popular works and for tourism purposes.</p>\r\n', 0, '2018-07-01 05:26:05', '2018-07-01 05:26:12', 1);

/*!40000 ALTER TABLE `articles` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `tags`
--

LOCK TABLES `tags` WRITE;
/*!40000 ALTER TABLE `tags` DISABLE KEYS */;
INSERT INTO `tags` VALUES (1,'Database','2018-05-15 05:49:50','2018-05-15 05:49:50'),(2,'PHP','2018-05-15 05:49:55','2018-05-15 05:49:55'),(3,'HTML','2018-05-15 05:50:00','2018-05-15 05:50:00');
/*!40000 ALTER TABLE `tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `articles_tags`
--

LOCK TABLES `articles_tags` WRITE;
/*!40000 ALTER TABLE `articles_tags` DISABLE KEYS */;
INSERT INTO `articles_tags` VALUES (2,2),(2,3),(4,1),(4,2),(4,3),(5,2),(5,3),(6,1),(6,2);
/*!40000 ALTER TABLE `articles_tags` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Dumping data for table `article_views`
--

LOCK TABLES `article_views` WRITE;
/*!40000 ALTER TABLE `article_views` DISABLE KEYS */;
INSERT INTO `article_views` VALUES (1533,1,1,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1534,1,1,'2018-05-16 21:15:42','2018-05-22 21:15:42'),(1535,1,1,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1536,1,1,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1537,1,1,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1538,1,1,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1539,1,1,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1540,1,1,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1541,1,1,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1542,1,1,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1543,1,1,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1544,1,1,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1545,1,1,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1546,1,1,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1547,1,1,'2018-05-02 21:15:42','2018-05-22 21:15:42'),(1548,1,1,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1549,1,1,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1550,1,1,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1551,1,1,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1552,1,2,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1553,1,2,'2018-04-30 21:15:42','2018-05-22 21:15:42'),(1554,1,2,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1555,1,2,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1556,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1557,1,2,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1558,1,2,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1559,1,2,'2018-04-30 21:15:42','2018-05-22 21:15:42'),(1560,1,2,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1561,1,2,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1562,1,2,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1563,1,2,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1564,1,2,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1565,1,2,'2018-05-02 21:15:42','2018-05-22 21:15:42'),(1566,1,2,'2018-04-30 21:15:42','2018-05-22 21:15:42'),(1567,1,2,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1568,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1569,1,2,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1570,1,2,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1571,1,2,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1572,1,2,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1573,1,2,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1574,1,2,'2018-05-12 21:15:42','2018-05-22 21:15:42'),(1575,1,2,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1576,1,2,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1577,1,2,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1578,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1579,1,2,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1580,1,2,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1581,1,2,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1582,1,2,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1583,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1584,1,2,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1585,1,2,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1586,1,2,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1587,1,2,'2018-05-16 21:15:42','2018-05-22 21:15:42'),(1588,1,2,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1589,1,2,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1590,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1591,1,2,'2018-05-02 21:15:42','2018-05-22 21:15:42'),(1592,1,2,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1593,1,2,'2018-05-15 21:15:42','2018-05-22 21:15:42'),(1594,1,2,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1595,1,2,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1596,1,2,'2018-05-05 21:15:42','2018-05-22 21:15:42'),(1597,1,2,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1598,1,3,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1599,1,3,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1600,1,3,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1601,1,3,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1602,1,3,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1603,1,3,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1604,1,3,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1605,1,3,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1606,1,3,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1607,1,3,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1608,1,3,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1609,1,3,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1610,1,3,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1611,1,3,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1612,1,3,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1613,1,3,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1614,1,3,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1615,1,3,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1616,1,3,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1617,1,3,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1618,1,3,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1619,1,3,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1620,1,4,'2018-05-15 21:15:42','2018-05-22 21:15:42'),(1621,1,4,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1622,1,4,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1623,1,4,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1624,1,4,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1625,1,4,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1626,1,4,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1627,1,4,'2018-05-15 21:15:42','2018-05-22 21:15:42'),(1628,1,4,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1629,1,4,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1630,1,4,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1631,1,4,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1632,1,4,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1633,1,4,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1634,1,4,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1635,1,4,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1636,1,4,'2018-05-18 21:15:42','2018-05-22 21:15:42'),(1637,1,4,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1638,1,4,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1639,1,4,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1640,1,4,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1641,1,4,'2018-04-30 21:15:42','2018-05-22 21:15:42'),(1642,1,4,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1643,1,4,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1644,1,4,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1645,1,4,'2018-05-18 21:15:42','2018-05-22 21:15:42'),(1646,1,4,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1647,1,4,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1648,1,4,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1649,1,4,'2018-04-27 21:15:42','2018-05-22 21:15:42'),(1650,1,4,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1651,1,5,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1652,1,5,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1653,1,5,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1654,1,5,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1655,1,5,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1656,1,5,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1657,1,5,'2018-05-12 21:15:42','2018-05-22 21:15:42'),(1658,1,5,'2018-05-09 21:15:42','2018-05-22 21:15:42'),(1659,1,5,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1660,1,5,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1661,1,5,'2018-04-30 21:15:42','2018-05-22 21:15:42'),(1662,1,5,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1663,1,6,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1664,1,6,'2018-05-15 21:15:42','2018-05-22 21:15:42'),(1665,1,6,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1666,1,6,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1667,1,6,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1668,1,6,'2018-05-13 21:15:42','2018-05-22 21:15:42'),(1669,1,6,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1670,1,6,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1671,1,6,'2018-05-16 21:15:42','2018-05-22 21:15:42'),(1672,1,6,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1673,1,6,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1674,1,6,'2018-05-16 21:15:42','2018-05-22 21:15:42'),(1675,1,6,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1676,1,6,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1677,1,6,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1678,1,6,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1679,1,6,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1680,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1681,1,6,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1682,1,6,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1683,1,6,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1684,1,6,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1685,1,6,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1686,1,6,'2018-05-16 21:15:42','2018-05-22 21:15:42'),(1687,1,6,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1688,1,6,'2018-05-02 21:15:42','2018-05-22 21:15:42'),(1689,1,6,'2018-04-24 21:15:42','2018-05-22 21:15:42'),(1690,1,6,'2018-05-17 21:15:42','2018-05-22 21:15:42'),(1691,1,6,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1692,1,6,'2018-04-26 21:15:42','2018-05-22 21:15:42'),(1693,1,6,'2018-05-05 21:15:42','2018-05-22 21:15:42'),(1694,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1695,1,6,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1696,1,6,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1697,1,6,'2018-04-23 21:15:42','2018-05-22 21:15:42'),(1698,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1699,1,6,'2018-05-05 21:15:42','2018-05-22 21:15:42'),(1700,1,6,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1701,1,6,'2018-04-25 21:15:42','2018-05-22 21:15:42'),(1702,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1703,1,6,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1704,1,6,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1705,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1706,1,6,'2018-04-28 21:15:42','2018-05-22 21:15:42'),(1707,1,6,'2018-05-09 21:15:42','2018-05-22 21:15:42'),(1708,1,6,'2018-05-14 21:15:42','2018-05-22 21:15:42'),(1709,1,6,'2018-05-15 21:15:42','2018-05-22 21:15:42'),(1710,1,6,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1711,1,6,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1712,1,6,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1713,1,6,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1714,1,6,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1715,1,6,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1716,1,6,'2018-05-12 21:15:42','2018-05-22 21:15:42'),(1717,1,6,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1718,1,6,'2018-05-02 21:15:42','2018-05-22 21:15:42'),(1719,1,6,'2018-05-12 21:15:42','2018-05-22 21:15:42'),(1720,1,6,'2018-05-20 21:15:42','2018-05-22 21:15:42'),(1721,1,6,'2018-05-19 21:15:42','2018-05-22 21:15:42'),(1722,1,6,'2018-05-22 21:15:42','2018-05-22 21:15:42'),(1723,1,6,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1724,1,6,'2018-05-05 21:15:42','2018-05-22 21:15:42'),(1725,1,6,'2018-05-11 21:15:42','2018-05-22 21:15:42'),(1726,1,6,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1727,1,6,'2018-05-10 21:15:42','2018-05-22 21:15:42'),(1728,1,6,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1729,1,6,'2018-05-06 21:15:42','2018-05-22 21:15:42'),(1730,1,6,'2018-05-08 21:15:42','2018-05-22 21:15:42'),(1731,1,6,'2018-05-01 21:15:42','2018-05-22 21:15:42'),(1732,1,6,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1733,1,6,'2018-04-29 21:15:42','2018-05-22 21:15:42'),(1734,1,6,'2018-05-03 21:15:42','2018-05-22 21:15:42'),(1735,1,6,'2018-05-07 21:15:42','2018-05-22 21:15:42'),(1736,1,6,'2018-04-22 21:15:42','2018-05-22 21:15:42'),(1737,1,6,'2018-05-21 21:15:42','2018-05-22 21:15:42'),(1738,1,6,'2018-05-04 21:15:42','2018-05-22 21:15:42'),(1739,1,1,'2018-05-23 08:59:12','2018-05-23 08:59:12'),(1740,1,1,'2018-05-23 09:02:31','2018-05-23 09:02:31'),(1741,1,1,'2018-05-23 09:13:06','2018-05-23 09:13:06'),(1742,1,4,'2018-05-23 09:13:16','2018-05-23 09:13:16'),(1743,1,4,'2018-05-23 09:14:07','2018-05-23 09:14:07'),(1744,1,4,'2018-05-23 09:14:13','2018-05-23 09:14:13'),(1745,1,4,'2018-05-23 09:28:52','2018-05-23 09:28:52'),(1746,1,4,'2018-05-23 09:29:06','2018-05-23 09:29:06'),(1747,1,4,'2018-05-23 09:29:33','2018-05-23 09:29:33'),(1748,1,6,'2018-05-24 06:07:33','2018-05-24 06:07:33'),(1749,1,6,'2018-05-24 06:21:21','2018-05-24 06:21:21'),(1750,1,6,'2018-05-24 06:22:05','2018-05-24 06:22:05');
/*!40000 ALTER TABLE `article_views` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-05-24 16:24:14
